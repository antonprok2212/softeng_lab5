<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>softeng</groupId>
  <artifactId>part2</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>part2</name>
  <url>http://maven.apache.org</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  
  <build>
		<finalName>part2</finalName>
		<plugins>

			<!-- Для конфігурування файлу Manifest вказуємо налаштування пагіну maven-jar-plugin (визначаємо головний клас та задаємо динамічне формування змінної classpath) -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib/
							</classpathPrefix>
							<mainClass>part2.App</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>

			<!-- Для автоматичного копіювання всієї бібліотек-залежностей 
проекту з локального репозиторію артефактів у заданий каталог (у даному випадку /lib) 
додаємо відповідні налаштування плагіну mavendependency-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>target
							</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Замість ручного конфігурування для створення executable 
JAR-файл можна використовувати спеціальні плагіни maven- assembly-plugin / maven-shade-plugin -->
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>3.1.1</version>
				<configuration>
					<archive>
						<manifest>
							<mainClass>part2.App</mainClass>
						</manifest>
					</archive>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
				</configuration>
			</plugin>
<!-- Для генерації документації -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.1.1</version>
			</plugin>
		</plugins>
	</build>
  
</project>
